apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: log-output
  name: log-output-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-output
  # GKE doesn't support ReadWriteMany for pvc, so we use Recreate for deployment
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: log-output
    spec:
      containers:
        - name: log-output
          image: eranikus424/log-output
          imagePullPolicy: Always
          volumeMounts:
            - name: log-output-volume
              mountPath: /usr/src/app/logs
            - name: config
              mountPath: /usr/src/app/config
              readOnly: true
          env:
            - name: PORT
              value: '3000'
            - name: PINGPONG_URL
              valueFrom:
                configMapKeyRef:
                  name: log-output-configmap
                  key: pingpong_url
            - name: MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: log-output-configmap
                  key: message
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            httpGet:
              path: /
              port: 3000
        - name: timestamp-generator
          image: eranikus424/timestamp-generator
          imagePullPolicy: Always
          volumeMounts:
            - name: log-output-volume
              mountPath: /usr/src/app/logs
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
      volumes:
        - name: log-output-volume
          persistentVolumeClaim:
            claimName: log-output-pvc
        - name: config
          configMap:
            name: log-output-configmap
            items:
              - key: information.txt
                path: information.txt

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: log-output
  name: ping-pong-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ping-pong
  template:
    metadata:
      labels:
        app: ping-pong
    spec:
      containers:
        - name: ping-pong
          image: eranikus424/ping-pong
          imagePullPolicy: Always
          env:
            - name: PORT
              value: '3000'
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: log-output-configmap
                  key: postgres_url
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            httpGet:
              path: /
              port: 3000
